{"ast":null,"code":"var _jsxFileName = \"/Users/davidkandler/digitalcrafts/reliability-tiers/reliability-tiers/src/components/tiers/tier-1.jsx\";\nimport React from 'react';\nimport firebaseConfig from '../../firebase.js';\nimport * as firebase from 'firebase/app';\n\nclass Tier1 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sources: [],\n      names: []\n    };\n    this.db = firebase.firestore();\n  } // render() {\n  //     return(\n  //         <div className=\"TierItem\">\n  //             <h1>1</h1>\n  //             <p onChange={this.handleChange}>{this.state.names}</p>\n  //         </div>\n  //     )\n  //     }\n\n\n  render() {\n    var sources = this.state.sources.map(function (source) {\n      return React.createElement(\"li\", {\n        key: \"{source.Name}\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"{source.twitter}\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, source.Name));\n    });\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, sources);\n  }\n\n  componentDidMount() {\n    var vm = this;\n    var names = [];\n    this.db.collection(\"NBASources\").where(\"score\", \"==\", 5).get().then(data => {\n      var sources = [];\n      data.forEach(doc => {\n        sources.push(doc.data());\n      });\n      vm.setState({\n        sources: sources\n      });\n    }).then(vm.fetchNames(vm.state.sources, names)); // for (let source of this.state.sources) {\n    //     \n    //     console.log(source.Name);\n    // }\n    // this.state.sources.map(function(data){\n    // })\n    // console.log(names);\n  }\n\n  fetchNames(sources, names) {\n    for (let source of sources) {\n      names.push(source.Name);\n      console.log(source);\n    } // sources.forEach(function(source){\n    //     names.push(source.Name)\n    // })\n\n\n    console.log(names);\n    this.setState({\n      names: names\n    });\n  } // handleChange(e) {\n  //     this.setState\n  // }\n\n\n}\n\nexport default Tier1;","map":{"version":3,"sources":["/Users/davidkandler/digitalcrafts/reliability-tiers/reliability-tiers/src/components/tiers/tier-1.jsx"],"names":["React","firebaseConfig","firebase","Tier1","Component","constructor","props","state","sources","names","db","firestore","render","map","source","Name","componentDidMount","vm","collection","where","get","then","data","forEach","doc","push","setState","fetchNames","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAO,KAAKC,QAAZ,MAA0B,cAA1B;;AAEA,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,OAAO,EAAE,EADF;AAEPC,MAAAA,KAAK,EAAE;AAFA,KAAX;AAIA,SAAKC,EAAL,GAAUR,QAAQ,CAACS,SAAT,EAAV;AACH,GAR+B,CAUhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIC,EAAAA,MAAM,GAAG;AAEL,QAAIJ,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAAX,CAAmBK,GAAnB,CAAuB,UAASC,MAAT,EAAiB;AACpD,aACE;AAAI,QAAA,GAAG,EAAC,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,IAAI,EAAC,kBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4BA,MAAM,CAACC,IAAnC,CADF,CADF;AAKD,KANa,CAAd;AAQA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGP,OADH,CADJ;AAKD;;AAGPQ,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,EAAE,GAAG,IAAT;AACA,QAAIR,KAAK,GAAG,EAAZ;AACA,SAAKC,EAAL,CAAQQ,UAAR,CAAmB,YAAnB,EAAiCC,KAAjC,CAAuC,OAAvC,EAAgD,IAAhD,EAAuD,CAAvD,EAA0DC,GAA1D,GAAgEC,IAAhE,CAAsEC,IAAD,IAAU;AAC3E,UAAId,OAAO,GAAG,EAAd;AACAc,MAAAA,IAAI,CAACC,OAAL,CAAcC,GAAD,IAAS;AAClBhB,QAAAA,OAAO,CAACiB,IAAR,CAAaD,GAAG,CAACF,IAAJ,EAAb;AACH,OAFD;AAGAL,MAAAA,EAAE,CAACS,QAAH,CAAY;AAAElB,QAAAA,OAAO,EAAEA;AAAX,OAAZ;AACH,KAND,EAMGa,IANH,CAMQJ,EAAE,CAACU,UAAH,CAAcV,EAAE,CAACV,KAAH,CAASC,OAAvB,EAAgCC,KAAhC,CANR,EAHgB,CAUhB;AACA;AACA;AACA;AACA;AAGA;AACA;AACH;;AAEDkB,EAAAA,UAAU,CAACnB,OAAD,EAAUC,KAAV,EAAgB;AACtB,SAAK,IAAIK,MAAT,IAAmBN,OAAnB,EAA4B;AACxBC,MAAAA,KAAK,CAACgB,IAAN,CAAWX,MAAM,CAACC,IAAlB;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAYf,MAAZ;AACH,KAJqB,CAKtB;AACA;AACA;;;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAYpB,KAAZ;AACA,SAAKiB,QAAL,CAAc;AACVjB,MAAAA,KAAK,EAAEA;AADG,KAAd;AAGH,GArE+B,CAsEhC;AACA;AACA;;;AAxEgC;;AA8EpC,eAAeN,KAAf","sourcesContent":["import React from 'react';\nimport firebaseConfig from '../../firebase.js';\nimport * as firebase from 'firebase/app';\n\nclass Tier1 extends React.Component {\n    constructor(props){\n        super(props);\n        this.state={\n            sources: [],\n            names: []\n        };\n        this.db = firebase.firestore();     \n    }\n\n    // render() {\n    //     return(\n    //         <div className=\"TierItem\">\n    //             <h1>1</h1>\n    //             <p onChange={this.handleChange}>{this.state.names}</p>\n    //         </div>\n    //     )\n    //     }\n        render() {\n\n            var sources = this.state.sources.map(function(source) {\n              return (\n                <li key=\"{source.Name}\">\n                  <a href=\"{source.twitter}\">{source.Name}</a>\n                </li>\n              );\n            });\n        \n            return (\n                <ul>\n                  {sources}\n                </ul>\n            );\n          }\n        \n\n    componentDidMount() { \n        var vm = this\n        var names = []\n        this.db.collection(\"NBASources\").where(\"score\", \"==\" , 5).get().then((data) => {\n            var sources = []\n            data.forEach((doc) => {\n                sources.push(doc.data())\n            })\n            vm.setState({ sources: sources })\n        }).then(vm.fetchNames(vm.state.sources, names))\n        // for (let source of this.state.sources) {\n        //     \n        //     console.log(source.Name);\n        // }\n        // this.state.sources.map(function(data){\n        \n         \n        // })\n        // console.log(names);\n    }\n\n    fetchNames(sources, names){   \n        for (let source of sources) {\n            names.push(source.Name)\n            console.log(source);\n        }\n        // sources.forEach(function(source){\n        //     names.push(source.Name)\n        // })\n        console.log(names)\n        this.setState({\n            names: names\n        })\n    }\n    // handleChange(e) {\n    //     this.setState\n    // }\n    \n   \n}\n\n\nexport default Tier1;"]},"metadata":{},"sourceType":"module"}